@using GBServerManager2.Services.Helpers;
@using GBServerManager2.Models.Options;

@inject ApplicationSettingsService _asr;

<div class="rz-p-4 rz-text-align-center">
    <RadzenSelectBar @bind-Value="isExistingServer" TValue="bool" class="mb-5">
        <Items>
            <RadzenSelectBarItem Text="New" Value="false" />
            <RadzenSelectBarItem Text="Existing" Value="true" />
        </Items>
    </RadzenSelectBar>
</div>

@if (isExistingServer == false)
{
    <div class="row">
        <span>Server Type</span>
        <RadzenDropDown @bind-Value=@selectedType Data=@games />
    </div>
    <div class="row">
        <span>Name</span>
        <input type="text" />
    </div>
}

@if(addDisabled)
{
    <span class="badge bg-warning" style="color: black;">Default path not set, please go to <RadzenLink Path="settings" Text="settings"/> and set.</span>
}

<div class="mt-2 d-flex justify-content-end">
    <button type="button" class="btn btn-sm btn-rounded btn-primary me-1" disabled="@addDisabled" @onclick="AddServer">Save</button>
    <button type="button" class="btn btn-sm btn-rounded btn-secondary" @onclick="(_ => _ds.CloseSide())">Cancel</button>
</div>

@code {
    [Inject] DialogService _ds { get; set; }
    //[Parameter] public ApplicationSettings appSetting { get; set; }
    List<string> games;
    private string selectedType = "";
    private bool isExistingServer = false;
    private bool pathIsValid = true;
    private bool addDisabled = false;


    protected override void OnInitialized()
    {
        games = new List<string>();
        foreach (var item in Enum.GetNames(typeof(ServerTypeEnum)).ToList())
        {
            games.Add(item.Replace('_', ' '));
        }

        addDisabled = !_asr.CheckServerPathSet();

    }

    private void AddServer()
    {

    }
}