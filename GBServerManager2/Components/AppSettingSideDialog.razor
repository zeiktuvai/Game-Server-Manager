@using GameServerManager.Services.Helpers;
@using GameServerManager.Models.Options;

<span>Path to install servers: </span>
<RadzenTextBox @bind-Value="ServerPath" class="@(pathIsValid == false ? "bg-warning w-100" : "w-100")" />

<div class="mt-2 d-flex justify-content-end">
    <button type="button" class="btn btn-sm btn-rounded btn-primary me-1" @onclick="SaveBasePath">Save</button>
    <button type="button" class="btn btn-sm btn-rounded btn-secondary" @onclick="(_ => _ds.CloseSide())">Cancel</button>
</div>

@code {
    [Inject] DialogService _ds { get; set; }
    [Inject] ApplicationSettingsService _ass { get; set; }
    [Parameter] public ApplicationSettings appSetting { get; set; }
    private string ServerPath;
    private bool pathIsValid = true;

    protected override void OnInitialized()
    {
        ServerPath = appSetting.Settings.FirstOrDefault(s => s.Key == GlobalConstants.ServerBasePath)?.Value ?? "";
    }

    private void SaveBasePath()
    {
        if (!string.IsNullOrWhiteSpace(ServerPath) && FileHelper.CheckDirectoryExists(ServerPath))
        {
            pathIsValid = true;
            var setting = appSetting.Settings.FirstOrDefault(s => s.Key == GlobalConstants.ServerBasePath);
            if (setting != null)
            {
                appSetting.Settings.FirstOrDefault(s => s.Key == GlobalConstants.ServerBasePath).Value = ServerPath;
            }
            else
            {
                appSetting.Settings.Add(new AppSetting { Key = GlobalConstants.ServerBasePath, Value = ServerPath });
            }
            _ass.SaveApplicationSetting(appSetting);
            _ds.CloseSide();
        }
        else
        {
            pathIsValid = false;
        }
    }
}
