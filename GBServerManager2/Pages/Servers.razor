@page "/servers"

@using GBServerManager2.Services.Helpers

<h3>Servers</h3>

<div class="row">
    <div class="col-md-3">
        <button type="button" @onclick="onClick">Click</button>
        <button type="button" @onclick="refreshOutput">Refresh</button>
        <button type="button" @onclick="stopProc">Kill</button>

        <span>@procID</span>
    </div>
</div>

<RadzenHtmlEditor @ref=textArea Disabled=true Style="color: white; height: 400px" @bind-Value=server.serverProc.processOutputString>
    <div style="display: none"></div>
</RadzenHtmlEditor>

@*<RadzenTextArea @ref=textArea @bind-Value=@(proc.processOutputString) Rows="20" Cols="100" Disabled=true Style="background-color: black; color: white; resize: none" ></RadzenTextArea>*@
@*<TextArea @ref=textArea disabled Style="background-color: black; color: white; resize: none; width: 800px; height: 400px">@proc.processOutputString</TextArea>*@

@code {
    //warning text yellow; error text red
    private GBServer server;
    private string procID = "";
    private RadzenHtmlEditor textArea;

    protected override void OnInitialized()
    {
        server = new GBServer() { ServerBasePath = "C:\\GBS-Private\\GroundBranch\\Binaries\\Win64\\", ServerPath = "C:\\GBS-Private\\GroundBranch\\Binaries\\Win64\\GroundBranchServer-Win64-Shipping.exe",
        MultiHome = "0.0.0.0", Port = 7776, QueryPort = 27614, RestartTime = 12};
        server.serverProc.outputUpdated += () => InvokeAsync(StateHasChanged);
        //proc.outputUpdated += () => _js.InvokeVoidAsync("scrollToEnd", new object[] { textArea.Element });
    }

    private void onClick()
    {
        //server._ServerPID = server.serverProc.StartServerProcess(server, server.GetProcessStartArgs());
    }

    private void refreshOutput()
    {

        StateHasChanged();

    }

    private void stopProc()
    {
        server.serverProc.StopProcess();
    }
}
